---
# Created by Oshan Chamika
# Mod Date: 28/12/2024

- name: Install and Enable tsso
  hosts: all
  become: yes

  tasks:
    - name: Install / check required packages
      dnf:
        name: 
          - python3
          - python3-pip
        state: present

    - name: Install Flask using pip
      pip:
        name: flask

    - name: Copy tsso py file
      copy:
        src: /home/it/TS-C9-Repo/tsso/tsso.py
        dest: /usr/local/bin/
        remote_src: yes
    
    - name : give permision for file
      shell: chmod +x /usr/local/bin/tsso.py

    - name: Copy tsso service file
      copy:
        src: /home/it/TS-C9-Repo/tsso/tsso.service
        dest: /etc/systemd/system/tsso.service
        remote_src: yes

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start tsso service
      systemd:
        name: tsso
        state: started
        enabled: yes

    - name: Allow Nginx to connect to the network (SELinux)
      command: setsebool -P httpd_can_network_connect on

    - name: Open port in the firewall
      firewalld:
        port: 5001/tcp
        permanent: yes
        state: enabled

    - name: Reload firewall
      shell: firewall-cmd --reload

    - name: Test tsso service access
      shell: curl http://127.0.0.1:5001
      register: curl_output

    - name: Print tsso test output
      debug:
        var: curl_output.stdout

    - name: Ensure tsso.conf file exists
      ansible.builtin.file:
        path: /etc/nginx/default.d/tsso.conf
        state: touch
        mode: '0644'
        
    - name: Ensure Netdata location block in Nginx configuration
      ansible.builtin.blockinfile:
        path: /etc/nginx/default.d/tsso.conf
        create: yes  # Ensures the file is created if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR tsso"
        block: |
            location /tsso/ {
                proxy_pass http://127.0.0.1:5001/;
                proxy_set_header Host $host;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                }
    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test

    - name: Print Nginx test output
      debug:
        var: nginx_test.stdout

    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded
